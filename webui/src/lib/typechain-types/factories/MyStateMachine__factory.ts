/* Autogenerated file. Do not edit manually. */
import type {ContractDeployTransaction, ContractRunner, Signer} from "ethers";
/* tslint:disable */
/* eslint-disable */
import {Contract, ContractFactory, ContractTransactionResponse, Interface,} from "ethers";
import type {NonPayableOverrides} from "../common";
import type {MyStateMachine, MyStateMachineInterface,} from "../MyStateMachine";

const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint8",
                name: "role",
                type: "uint8",
            },
            {
                indexed: true,
                internalType: "uint8",
                name: "actionId",
                type: "uint8",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "scalar",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "sequence",
                type: "uint256",
            },
        ],
        name: "SignaledEvent",
        type: "event",
    },
    {
        inputs: [],
        name: "context",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "sequence",
                        type: "uint256",
                    },
                    {
                        internalType: "int256[]",
                        name: "state",
                        type: "int256[]",
                    },
                    {
                        components: [
                            {
                                internalType: "string",
                                name: "label",
                                type: "string",
                            },
                            {
                                internalType: "uint8",
                                name: "offset",
                                type: "uint8",
                            },
                            {
                                components: [
                                    {
                                        internalType: "uint8",
                                        name: "x",
                                        type: "uint8",
                                    },
                                    {
                                        internalType: "uint8",
                                        name: "y",
                                        type: "uint8",
                                    },
                                ],
                                internalType: "struct Model.Position",
                                name: "position",
                                type: "tuple",
                            },
                            {
                                internalType: "uint256",
                                name: "initial",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "capacity",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct Model.Place[]",
                        name: "places",
                        type: "tuple[]",
                    },
                    {
                        components: [
                            {
                                internalType: "string",
                                name: "label",
                                type: "string",
                            },
                            {
                                internalType: "uint8",
                                name: "offset",
                                type: "uint8",
                            },
                            {
                                components: [
                                    {
                                        internalType: "uint8",
                                        name: "x",
                                        type: "uint8",
                                    },
                                    {
                                        internalType: "uint8",
                                        name: "y",
                                        type: "uint8",
                                    },
                                ],
                                internalType: "struct Model.Position",
                                name: "position",
                                type: "tuple",
                            },
                            {
                                internalType: "uint8",
                                name: "role",
                                type: "uint8",
                            },
                            {
                                internalType: "int256[]",
                                name: "delta",
                                type: "int256[]",
                            },
                            {
                                internalType: "int256[]",
                                name: "guard",
                                type: "int256[]",
                            },
                        ],
                        internalType: "struct Model.Transition[]",
                        name: "transitions",
                        type: "tuple[]",
                    },
                ],
                internalType: "struct Model.Context",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "sequence",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint8",
                name: "action",
                type: "uint8",
            },
            {
                internalType: "uint256",
                name: "scalar",
                type: "uint256",
            },
        ],
        name: "signal",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint8[]",
                name: "actions",
                type: "uint8[]",
            },
            {
                internalType: "uint256[]",
                name: "scalars",
                type: "uint256[]",
            },
        ],
        name: "signalMany",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "state",
        outputs: [
            {
                internalType: "int256",
                name: "",
                type: "int256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
] as const;

const _bytecode =
    "";

type MyStateMachineConstructorParams =
    | [signer?: Signer]
    | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
    xs: MyStateMachineConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyStateMachine__factory extends ContractFactory {
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;

    constructor(...args: MyStateMachineConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args);
        } else {
            super(_abi, _bytecode, args[0]);
        }
    }

    static createInterface(): MyStateMachineInterface {
        return new Interface(_abi) as MyStateMachineInterface;
    }

    static connect(
        address: string,
        runner?: ContractRunner | null
    ): MyStateMachine {
        return new Contract(address, _abi, runner) as unknown as MyStateMachine;
    }

    override getDeployTransaction(
        overrides?: NonPayableOverrides & { from?: string }
    ): Promise<ContractDeployTransaction> {
        return super.getDeployTransaction(overrides || {});
    }

    override deploy(overrides?: NonPayableOverrides & { from?: string }) {
        return super.deploy(overrides || {}) as Promise<
            MyStateMachine & {
            deploymentTransaction(): ContractTransactionResponse;
        }
        >;
    }

    override connect(runner: ContractRunner | null): MyStateMachine__factory {
        return super.connect(runner) as MyStateMachine__factory;
    }
}
